"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const Icon_1 = require("../Icon");
const Text_1 = require("../Text");
class DisclosureFactory extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            collapsed: this.props.collapsed || true
        };
        this.handleClick = this.handleClick.bind(this);
    }
    render() {
        return (React.createElement(DisclosureWrapper, Object.assign({ collapsed: this.state.collapsed }, this.props),
            React.createElement(DisclosureHeader, { onClick: this.handleClick },
                this.state.collapsed ? React.createElement(Icon_1.Icon, { name: 'CaretRight' }) : React.createElement(Icon_1.Icon, { name: 'CaretDown' }),
                React.createElement(Text_1.Text, null, this.props.title)),
            !this.state.collapsed &&
                React.createElement(DisclosureContent, null, this.props.children)));
    }
    handleClick() {
        this.setState({
            collapsed: !this.state.collapsed
        });
    }
}
const DisclosureContent = styled_components_1.default.div `
  padding-left: 22px;
`;
const DisclosureHeader = styled_components_1.default.div `
  display: flex;
  align-items: center;
  padding: 8px 0;

  ${Icon_1.Icon} {
    margin-right: 6px;
    margin-top: -3px;
  }
`;
const DisclosureWrapper = styled_components_1.default.section ``;
exports.Disclosure = styled_components_1.default(DisclosureFactory) ``;
