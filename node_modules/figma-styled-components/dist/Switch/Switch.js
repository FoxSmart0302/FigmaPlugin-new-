"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const Text_1 = require("../Text");
const SwitchSlider = styled_components_1.default.span `
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transition: transform 0.2s;
  transition: background-color 0 0.2s;
  border: 1px solid #000000;
  border-radius: 12px;
  background-color: #ffffff;

  &:before {
    position: absolute;
    top: -1px;
    left: -1px;
    width: 10px;
    height: 10px;
    content: "";
    transition: transform 0.2s;
    transition: background-color 0 0.2s;
    border: 1px solid #000000;
    border-radius: 50%;
    background-color: white;
  }
`;
const SwitchContainerFactory = ({ onChange, checked, value, ...props }) => {
    const handleChange = (event) => {
        if (onChange) {
            onChange(event);
        }
    };
    return (React.createElement("div", Object.assign({}, props),
        React.createElement("input", { type: 'checkbox', onChange: onChange, checked: checked, value: value }),
        React.createElement(SwitchSlider, null)));
};
const SwitchContainer = styled_components_1.default(SwitchContainerFactory) `
  position: relative;
  width: 24px;
  height: 12px;
  margin: 10px 16px 10px 8px;

  input {
    width: 0;
    height: 0;
    opacity: 0;
  }

  input:checked + ${SwitchSlider} {
    background-color: #000000;
  }

  input:focus {
    outline: none;
    box-shadow: 0 0 1px #2196f3;
  }

  input:checked + ${SwitchSlider}:before {
    transform: translateX(12px);
  }
`;
// tslint:disable:jsx-no-lambda
// tslint:disable:no-unused-expression
const SwitchFactory = ({ checked, onChange, label, value, ...props }) => {
    return (React.createElement("label", Object.assign({}, props),
        React.createElement(SwitchContainer, { onChange: onChange, checked: checked, value: value }),
        React.createElement(Text_1.Text, null, label)));
};
exports.Switch = styled_components_1.default(SwitchFactory) `
  position: relative;
  display: flex;
  align-items: center;
  align-self: 1;
  flex-direction: row;
  cursor: default;
`;
