"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const styled_components_1 = __importStar(require("styled-components"));
const OptionButton_1 = require("../OptionButton");
const getHoverStyles = (toggled, disabled) => {
    if (disabled) {
        return styled_components_1.css `
      background: transparent;
    `;
    }
    else {
        return styled_components_1.css `
      background: ${toggled ? '#18A0FB' : 'rgba(0, 0, 0, 0.1)'};
    `;
    }
};
const IconButtonFactory = styled_components_1.default(OptionButton_1.OptionButton) `
   background: ${(props) => props.toggled ? '#18A0FB' : 'transparent'};
   color: ${(props) => props.toggled ? '#ffffff' : '#000000'};


    &:hover {
      ${(props) => getHoverStyles(props.toggled || false, props.disabled || false)}
      box-shadow: none;
    }

    &:active {
      background: ${(props) => props.disabled ? 'transparent' : '#18A0FB'};
      color: ${(props) => props.disabled ? '#000' : '#fff'};

      ${OptionButton_1.OptionButtonContent} {
        background: transparent;
      }
    }

    &:focus {
      box-shadow: ${(props) => props.toggled ? 'inset 0 0 0 2px rgba(0, 0, 0, 0.3)' : 'inset 0 0 0 2px #18A0FB'};
    }

   ${OptionButton_1.OptionButtonContent} {
     background: transparent;
   }
`;
exports.IconButton = styled_components_1.default(IconButtonFactory) ``;
